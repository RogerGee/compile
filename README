compile

This is the source code repository for the compile program. It was written and is maintained by
Roger Gee <rpg11a@acu.edu>. The source code should work (granted with a few modifications) on
most major operating systems that implement POSIX plus Windows systems.
------------------------------------------------------------------------------------------------
Version Changelog -

1.0 - obsolete 
2.0 - refactor program; first major release
 + targets file functionality
 + command-line options passed to compiler
 + man page documentation
2.1.0 - fix target order in compiler command line
2.1.1 - add return value from main
2.1.2 - fixes to previous revision
2.1.3 - properly handle change log
2.2.0 - add output redirection feature
------------------------------------------------------------------------------------------------
Building the project from source (Linux/OS X) -

Running the project make file should build the project for a POSIX-complient system. For Debian-
like systems that implement the Debian packaging system, a standard Debian binary package (.deb
file) can be generated using the ./create-package script. This script creates the necessary file-
system in the location specified on its command-line with the specified architecture annotation.

# building the program
$ cd repository-directory
$ make

# building the Debian package file (should be run after make command)
# substitute an appropriate temporary location to build the package
# filesystem and the necessary architecture
$ cd repository-directory
$ ./create-package /tmp/compile-dpkg-dir i386

Debian packages should now be built under the DEBIAN subdirectory. If you use dpkg-deb then make
sure to overwrite the symlinks with the actual binary files since it will tar the symlinks. I've
written alternatives to dpkg-deb to work around this issue...
------------------------------------------------------------------------------------------------
Building the project from source (MS Windows) -

*Note: I prefer to use Microsoft-issued compilers as they have better, more up-to-date API coverage
and produce better, more efficient binaries. This code repository includes scripts to build an MS
Windows binary using the standard Microsoft SDK C compiler Cl.exe. You can easily modify the
make.bat file to accommodate your compiler.

This repository provides two ways in which you can build the compile.exe binary for Windows.

1. Use the make.bat file to run the Cl.exe C compiler against the code base with the needed options.

> cd repo-folder
> make.bat

2. Use the MSBuild XML file to build the project using either the Command-line or Visual Studio. On
the command-line, this is as simple as running 'msbuild'.

> cd repo-folder
> msbuild

If you use Visual Studio, you can open the Compile.vcxproj file and build in the normal way.
